def modify_storage(data_store, new_entry):
    data_store.update(new_entry)
    return data_store


def allocate_to_associative_cache(cache_structure, position, main_store):
    cache_tag = position[:11]  
    data_block = main_store.get(position[:11] + '000')  

    if data_block:
       
        available_line = next((key for key, value in cache_structure.items() if value[2] == 0), None)
        if available_line is None:
           
            available_line = list(cache_structure.keys())[0]
       
        cache_structure[available_line] = [cache_tag, data_block, 1]

    return cache_structure


main_data_store = {}
associative_memory_cache = {
    "line1": ["00000000000", [0]*8, 0],
    "line2": ["00000000000", [0]*8, 0],
    "line3": ["00000000000", [0]*8, 0],
    "line4": ["00000000000", [0]*8, 0]
}


new_entry_alpha = {"00000110101000": [0, 1, 2, 3, 4, 5, 6, 7]}
new_entry_beta = {"00001110101000": [10, 11, 12, 13, 14, 15, 16, 17]}
new_entry_gamma = {"00011110101000": [20, 21, 22, 23, 24, 25, 26, 27]}
new_entry_delta = {"00111110101000": [30, 31, 32, 33, 34, 35, 36, 37]}
new_entry_epsilon = {"01111110101000": [40, 41, 42, 43, 44, 45, 46, 47]}


main_data_store = modify_storage(main_data_store, new_entry_alpha)
main_data_store = modify_storage(main_data_store, new_entry_beta)
main_data_store = modify_storage(main_data_store, new_entry_gamma)
main_data_store = modify_storage(main_data_store, new_entry_delta)
main_data_store = modify_storage(main_data_store, new_entry_epsilon)


position_address_1 = "00000110101010"
position_address_2 = "00001110101010"
position_address_3 = "00011110101111"
position_address_4 = "00111110101101"
position_address_5 = "01111110101110"

associative_memory_cache = allocate_to_associative_cache(
    associative_memory_cache, position_address_1, main_data_store
)
associative_memory_cache = allocate_to_associative_cache(
    associative_memory_cache, position_address_2, main_data_store
)
associative_memory_cache = allocate_to_associative_cache(
    associative_memory_cache, position_address_3, main_data_store
)
associative_memory_cache = allocate_to_associative_cache(
    associative_memory_cache, position_address_4, main_data_store
)
associative_memory_cache = allocate_to_associative_cache(
    associative_memory_cache, position_address_5, main_data_store
)

print(associative_memory_cache)
